{"version":3,"file":"animations-B5ZpCBli.js","sources":["../../node_modules/react-intersection-observer/dist/index.mjs"],"sourcesContent":["\"use client\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/InView.tsx\nimport * as React from \"react\";\n\n// src/observe.ts\nvar observerMap = /* @__PURE__ */ new Map();\nvar RootIds = /* @__PURE__ */ new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\nfunction getRootId(root) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(\n    (key) => options[key] !== void 0\n  ).map((key) => {\n    return `${key}_${key === \"root\" ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\nfunction createObserver(options) {\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n  if (!instance) {\n    const elements = /* @__PURE__ */ new Map();\n    let thresholds;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        var _a;\n        const inView = entry.isIntersecting && thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          entry.isVisible = inView;\n        }\n        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n  return instance;\n}\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {\n    };\n  }\n  const { id, observer, elements } = createObserver(options);\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    callbacks.splice(callbacks.indexOf(callback), 1);\n    if (callbacks.length === 0) {\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n    if (elements.size === 0) {\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\n// src/InView.tsx\nfunction isPlainChildren(props) {\n  return typeof props.children !== \"function\";\n}\nvar InView = class extends React.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"node\", null);\n    __publicField(this, \"_unobserveCb\", null);\n    __publicField(this, \"handleNode\", (node) => {\n      if (this.node) {\n        this.unobserve();\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          this.setState({ inView: !!this.props.initialInView, entry: void 0 });\n        }\n      }\n      this.node = node ? node : null;\n      this.observeNode();\n    });\n    __publicField(this, \"handleChange\", (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        this.unobserve();\n      }\n      if (!isPlainChildren(this.props)) {\n        this.setState({ inView, entry });\n      }\n      if (this.props.onChange) {\n        this.props.onChange(inView, entry);\n      }\n    });\n    this.state = {\n      inView: !!props.initialInView,\n      entry: void 0\n    };\n  }\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n  componentWillUnmount() {\n    this.unobserve();\n  }\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      },\n      fallbackInView\n    );\n  }\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children\n    );\n  }\n};\n\n// src/useInView.tsx\nimport * as React2 from \"react\";\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _a;\n  const [ref, setRef] = React2.useState(null);\n  const callback = React2.useRef();\n  const [state, setState] = React2.useState({\n    inView: !!initialInView,\n    entry: void 0\n  });\n  callback.current = onChange;\n  React2.useEffect(\n    () => {\n      if (skip || !ref) return;\n      let unobserve;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry\n          });\n          if (callback.current) callback.current(inView, entry);\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            unobserve();\n            unobserve = void 0;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay\n        },\n        fallbackInView\n      );\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay\n    ]\n  );\n  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n  const previousEntryTarget = React2.useRef();\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: void 0\n    });\n  }\n  const result = [setRef, state.inView, state.entry];\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\nexport {\n  InView,\n  defaultFallbackInView,\n  observe,\n  useInView\n};\n//# sourceMappingURL=index.mjs.map"],"names":["observerMap","Map","RootIds","WeakMap","rootId","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","useInView","delay","rootMargin","triggerOnce","skip","initialInView","onChange","ref","setRef","React2.useState","React2.useRef","state","setState","current","reactExports","useEffect","entryTarget","previousEntryTarget","result"],"mappings":"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","x_google_ignoreList":[0]}